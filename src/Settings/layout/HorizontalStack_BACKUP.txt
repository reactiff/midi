// import React from 'react'
// import midiContext from '../../midiContext'
// import ui from '@reactiff/ui-core'
// import MIDIPad from '../MIDIPad'
// import MIDISelector from '../MIDISelector'

// const HorizontalStack = (props: any) => {

//   const { controller  } = props

//   // scope={{
//   //   eventHandler,
//   //   controller,
//   //   channelNumbers: [0],
//   //   channelControls: g
//   // }}

//   const VerticalGlobals =
//     config.globalGroups && layout === 'vertical'
//       ? () => (
//           <ui.col marginTop={15} marginBottom={15}>
//             {config.globalGroups.map((g, i) => {
//               return (
//                 <VerticalLayout
//                   key={i}
//                   scope={{
//                     eventHandler,
//                     controller,
//                     channelNumbers: [0],
//                     channelControls: g
//                   }}
//                 />
//               )
//             })}
//           </ui.col>
//         )
//       : () => null

//   const HorizontalGlobals =
//     config.globalGroups && layout === 'horizontal'
//       ? () => (
//           <ui.row marginLeft={15} marginRight={15}>
//             {config.globalGroups.map((g, i) => {
//               return (
//                 <HorizontalLayout
//                   key={i}
//                   scope={{
//                     eventHandler,
//                     controller,
//                     channelNumbers: [0],
//                     channelControls: g
//                   }}
//                 />
//               )
//             })}
//           </ui.row>
//         )
//       : () => null

      
//   return <ui.col>

//     <ui.text fontSize='0.7rem' color='white' padding='5px 0 30px 0' textAlign="right">
//       {controller.device.name}
//     </ui.text>
    
//     {/* For vertical layout, render globals before the row */}

//     { !verticalInverted && <VerticalGlobals /> }
    
//     <ui.row>
      
//       { !horizontalInverted && <HorizontalGlobals /> }

//       {
//         layout === 'vertical' &&
//         <VerticalLayout scope={{ 
//           eventHandler, 
//           controller,
//           channelNumbers, 
//           channelControls: config.channelControls  
//         }}/>
//       }

//       {
//         layout === 'horizontal' &&
//         <HorizontalLayout scope={{ 
//           eventHandler, 
//           controller, 
//           channelNumbers, 
//           channelControls: config.channelControls 
//         }}/>
//       }

//       { horizontalInverted && <HorizontalGlobals /> }

//     </ui.row>

//     { verticalInverted && <VerticalGlobals /> }
    
//   </ui.col>
// }


// export default HorizontalStack
